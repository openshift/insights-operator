{
  "metadata": {
    "name": "router-default-7bbdcfcf9b-7xdln",
    "generateName": "router-default-7bbdcfcf9b-",
    "namespace": "openshift-ingress",
    "selfLink": "/api/v1/namespaces/openshift-ingress/pods/router-default-7bbdcfcf9b-7xdln",
    "uid": "929c3faa-a2a8-4698-b59d-48b48aec08f8",
    "resourceVersion": "1782319",
    "creationTimestamp": "2021-07-07T16:14:55Z",
    "labels": {
      "ingresscontroller.operator.openshift.io/deployment-ingresscontroller": "default",
      "pod-template-hash": "7bbdcfcf9b"
    },
    "annotations": {
      "openshift.io/scc": "hostnetwork",
      "unsupported.do-not-use.openshift.io/override-liveness-grace-period-seconds": "10"
    },
    "ownerReferences": [
      {
        "apiVersion": "apps/v1",
        "kind": "ReplicaSet",
        "name": "router-default-7bbdcfcf9b",
        "uid": "d128b2dd-c007-438a-acf9-95f85b89d8ce",
        "controller": true,
        "blockOwnerDeletion": true
      }
    ]
  },
  "spec": {
    "volumes": [
      {
        "name": "default-certificate",
        "secret": {
          "secretName": "router-certs-default",
          "defaultMode": 420
        }
      },
      {
        "name": "service-ca-bundle",
        "configMap": {
          "name": "service-ca-bundle",
          "items": [
            {
              "key": "service-ca.crt",
              "path": "service-ca.crt"
            }
          ],
          "defaultMode": 420,
          "optional": false
        }
      },
      {
        "name": "metrics-certs",
        "secret": {
          "secretName": "router-metrics-certs-default",
          "defaultMode": 420
        }
      },
      {
        "name": "router-token-z7cz2",
        "secret": {
          "secretName": "router-token-z7cz2",
          "defaultMode": 420
        }
      }
    ],
    "containers": [
      {
        "name": "router",
        "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cdc05f16135f40d5974e4a827244fb87862219136da7a3d36c8ff2dfc2135a78",
        "ports": [
          {
            "name": "http",
            "hostPort": 80,
            "containerPort": 80,
            "protocol": "TCP"
          },
          {
            "name": "https",
            "hostPort": 443,
            "containerPort": 443,
            "protocol": "TCP"
          },
          {
            "name": "metrics",
            "hostPort": 1936,
            "containerPort": 1936,
            "protocol": "TCP"
          }
        ],
        "env": [
          {
            "name": "STATS_PORT",
            "value": "1936"
          },
          {
            "name": "ROUTER_SERVICE_NAMESPACE",
            "value": "openshift-ingress"
          },
          {
            "name": "DEFAULT_CERTIFICATE_DIR",
            "value": "/etc/pki/tls/private"
          },
          {
            "name": "DEFAULT_DESTINATION_CA_PATH",
            "value": "/var/run/configmaps/service-ca/service-ca.crt"
          },
          {
            "name": "ROUTER_SERVICE_NAME",
            "value": "default"
          },
          {
            "name": "STATS_USERNAME",
            "valueFrom": {
              "secretKeyRef": {
                "name": "router-stats-default",
                "key": "statsUsername"
              }
            }
          },
          {
            "name": "STATS_PASSWORD",
            "valueFrom": {
              "secretKeyRef": {
                "name": "router-stats-default",
                "key": "statsPassword"
              }
            }
          },
          {
            "name": "ROUTER_METRICS_TYPE",
            "value": "haproxy"
          },
          {
            "name": "ROUTER_METRICS_TLS_CERT_FILE",
            "value": "/etc/pki/tls/metrics-certs/tls.crt"
          },
          {
            "name": "ROUTER_METRICS_TLS_KEY_FILE",
            "value": "/etc/pki/tls/metrics-certs/tls.key"
          },
          {
            "name": "ROUTER_CANONICAL_HOSTNAME",
            "value": "apps.imeixner20210707.lab.upshift.rdu2.redhat.com"
          },
          {
            "name": "ROUTER_THREADS",
            "value": "4"
          },
          {
            "name": "ROUTER_CIPHERS",
            "value": "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
          },
          {
            "name": "SSL_MIN_VERSION",
            "value": "TLSv1.2"
          },
          {
            "name": "ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK",
            "value": "false"
          },
          {
            "name": "ROUTER_ALLOW_WILDCARD_ROUTES",
            "value": "false"
          },
          {
            "name": "ROUTER_SET_FORWARDED_HEADERS",
            "value": "append"
          },
          {
            "name": "ROUTER_DISABLE_HTTP2",
            "value": "true"
          }
        ],
        "resources": {
          "requests": {
            "cpu": "100m",
            "memory": "256Mi"
          }
        },
        "volumeMounts": [
          {
            "name": "default-certificate",
            "readOnly": true,
            "mountPath": "/etc/pki/tls/private"
          },
          {
            "name": "service-ca-bundle",
            "readOnly": true,
            "mountPath": "/var/run/configmaps/service-ca"
          },
          {
            "name": "metrics-certs",
            "readOnly": true,
            "mountPath": "/etc/pki/tls/metrics-certs"
          },
          {
            "name": "router-token-z7cz2",
            "readOnly": true,
            "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
          }
        ],
        "livenessProbe": {
          "httpGet": {
            "path": "/healthz",
            "port": 1936,
            "host": "localhost",
            "scheme": "HTTP"
          },
          "initialDelaySeconds": 10,
          "timeoutSeconds": 1,
          "periodSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "httpGet": {
            "path": "/healthz/ready",
            "port": 1936,
            "host": "localhost",
            "scheme": "HTTP"
          },
          "initialDelaySeconds": 10,
          "timeoutSeconds": 1,
          "periodSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "terminationMessagePath": "/dev/termination-log",
        "terminationMessagePolicy": "FallbackToLogsOnError",
        "imagePullPolicy": "IfNotPresent",
        "securityContext": {
          "capabilities": {
            "drop": [
              "KILL",
              "MKNOD",
              "SETGID",
              "SETUID"
            ]
          },
          "runAsUser": 1000620000
        }
      }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 3600,
    "dnsPolicy": "ClusterFirstWithHostNet",
    "nodeSelector": {
      "kubernetes.io/os": "linux",
      "node-role.kubernetes.io/worker": ""
    },
    "serviceAccountName": "router",
    "serviceAccount": "router",
    "hostNetwork": true,
    "securityContext": {
      "seLinuxOptions": {
        "level": "s0:c25,c10"
      },
      "supplementalGroups": [
        1000620000
      ],
      "fsGroup": 1000620000
    },
    "imagePullSecrets": [
      {
        "name": "router-dockercfg-bsm9c"
      }
    ],
    "schedulerName": "default-scheduler",
    "tolerations": [
      {
        "key": "node.kubernetes.io/not-ready",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 300
      },
      {
        "key": "node.kubernetes.io/unreachable",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 300
      },
      {
        "key": "node.kubernetes.io/memory-pressure",
        "operator": "Exists",
        "effect": "NoSchedule"
      }
    ],
    "priorityClassName": "system-cluster-critical",
    "priority": 2000000000,
    "enableServiceLinks": true,
    "preemptionPolicy": "PreemptLowerPriority"
  },
  "status": {
    "phase": "Pending",
    "conditions": [
      {
        "type": "PodScheduled",
        "status": "False",
        "lastProbeTime": null,
        "lastTransitionTime": "2021-07-07T16:14:55Z",
        "reason": "Unschedulable",
        "message": "0/2 nodes are available: 1 node(s) didn't have free ports for the requested pod ports, 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate."
      }
    ],
    "qosClass": "Burstable"
  }
}
