apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/1365
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    release.openshift.io/feature-set: TechPreviewNoUpgrade
  name: datagathers.insights.openshift.io
spec:
  group: insights.openshift.io
  names:
    kind: DataGather
    listKind: DataGatherList
    plural: datagathers
    singular: datagather
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - description: DataGather job state
          jsonPath: .status.dataGatherState
          name: State
          type: string
        - description: DataGather start time
          jsonPath: .status.startTime
          name: StartTime
          type: date
        - description: DataGather finish time
          jsonPath: .status.finishTime
          name: FinishTime
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "DataGather provides data gather configuration options and status for the particular Insights data gathering. \n Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support."
          type: object
          required:
            - spec
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: spec holds user settable values for configuration
              type: object
              properties:
                dataPolicy:
                  description: dataPolicy allows user to enable additional global obfuscation of the IP addresses and base domain in the Insights archive data. Valid values are "ClearText" and "ObfuscateNetworking". When set to ClearText the data is not obfuscated. When set to ObfuscateNetworking the IP addresses and the cluster domain name are obfuscated. When omitted, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time. The current default is ClearText.
                  type: string
                  enum:
                    - ""
                    - ClearText
                    - ObfuscateNetworking
                gatherers:
                  description: 'gatherers is a list of gatherers configurations. The particular gatherers IDs can be found at https://github.com/openshift/insights-operator/blob/master/docs/gathered-data.md. Run the following command to get the names of last active gatherers: "oc get insightsoperators.operator.openshift.io cluster -o json | jq ''.status.gatherStatus.gatherers[].name''"'
                  type: array
                  items:
                    description: gathererConfig allows to configure specific gatherers
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: name is the name of specific gatherer
                        type: string
                      state:
                        description: state allows you to configure specific gatherer. Valid values are "Enabled", "Disabled" and omitted. When omitted, this means no opinion and the platform is left to choose a reasonable default. The current default is Enabled.
                        type: string
                        enum:
                          - ""
                          - Enabled
                          - Disabled
            status:
              description: status holds observed values from the cluster. They may not be overridden.
              type: object
              properties:
                conditions:
                  description: conditions provide details on the status of the gatherer job.
                  type: array
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                dataGatherState:
                  description: dataGatherState reflects the current state of the data gathering process.
                  type: string
                  enum:
                    - Running
                    - Completed
                    - Failed
                    - Pending
                  x-kubernetes-validations:
                    - rule: '!(oldSelf == ''Running'' && self == ''Pending'')'
                      message: dataGatherState cannot transition from Running to Pending
                    - rule: '!(oldSelf == ''Completed'' && self == ''Pending'')'
                      message: dataGatherState cannot transition from Completed to Pending
                    - rule: '!(oldSelf == ''Failed'' && self == ''Pending'')'
                      message: dataGatherState cannot transition from Failed to Pending
                    - rule: '!(oldSelf == ''Completed'' && self == ''Running'')'
                      message: dataGatherState cannot transition from Completed to Running
                    - rule: '!(oldSelf == ''Failed'' && self == ''Running'')'
                      message: dataGatherState cannot transition from Failed to Running
                finishTime:
                  description: finishTime is the time when Insights data gathering finished.
                  type: string
                  format: date-time
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: finishTime is immutable once set
                gatherers:
                  description: gatherers is a list of active gatherers (and their statuses) in the last gathering.
                  type: array
                  items:
                    description: gathererStatus represents information about a particular data gatherer.
                    type: object
                    required:
                      - conditions
                      - lastGatherDuration
                      - name
                    properties:
                      conditions:
                        description: conditions provide details on the status of each gatherer.
                        type: array
                        minItems: 1
                        items:
                          description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                          type: object
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              type: string
                              format: date-time
                            message:
                              description: message is a human readable message indicating details about the transition. This may be an empty string.
                              type: string
                              maxLength: 32768
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                              type: integer
                              format: int64
                              minimum: 0
                            reason:
                              description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                              type: string
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              type: string
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              type: string
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        x-kubernetes-list-map-keys:
                          - type
                        x-kubernetes-list-type: map
                      lastGatherDuration:
                        description: lastGatherDuration represents the time spent gathering.
                        type: string
                        pattern: ^([1-9][0-9]*(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      name:
                        description: name is the name of the gatherer.
                        type: string
                        maxLength: 256
                        minLength: 5
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
                insightsReport:
                  description: insightsReport provides general Insights analysis results. When omitted, this means no data gathering has taken place yet or the corresponding Insights analysis (identified by "insightsRequestID") is not available.
                  type: object
                  properties:
                    downloadedAt:
                      description: downloadedAt is the time when the last Insights report was downloaded. An empty value means that there has not been any Insights report downloaded yet and it usually appears in disconnected clusters (or clusters when the Insights data gathering is disabled).
                      type: string
                      format: date-time
                    healthChecks:
                      description: healthChecks provides basic information about active Insights health checks in a cluster.
                      type: array
                      items:
                        description: healthCheck represents an Insights health check attributes.
                        type: object
                        required:
                          - advisorURI
                          - description
                          - state
                          - totalRisk
                        properties:
                          advisorURI:
                            description: advisorURI provides the URL link to the Insights Advisor.
                            type: string
                            pattern: ^https:\/\/\S+
                          description:
                            description: description provides basic description of the healtcheck.
                            type: string
                            maxLength: 2048
                            minLength: 10
                          state:
                            description: state determines what the current state of the health check is. Health check is enabled by default and can be disabled by the user in the Insights advisor user interface.
                            type: string
                            enum:
                              - Enabled
                              - Disabled
                          totalRisk:
                            description: totalRisk of the healthcheck. Indicator of the total risk posed by the detected issue; combination of impact and likelihood. The values can be from 1 to 4, and the higher the number, the more important the issue.
                            type: integer
                            format: int32
                            maximum: 4
                            minimum: 1
                      x-kubernetes-list-type: atomic
                    uri:
                      description: uri provides the URL link from which the report was downloaded.
                      type: string
                      pattern: ^https:\/\/\S+
                insightsRequestID:
                  description: insightsRequestID is an Insights request ID to track the status of the Insights analysis (in console.redhat.com processing pipeline) for the corresponding Insights data archive.
                  type: string
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: insightsRequestID is immutable once set
                relatedObjects:
                  description: relatedObjects is a list of resources which are useful when debugging or inspecting the data gathering Pod
                  type: array
                  items:
                    description: ObjectReference contains enough information to let you inspect or modify the referred object.
                    type: object
                    required:
                      - group
                      - name
                      - resource
                    properties:
                      group:
                        description: 'group is the API Group of the Resource. Enter empty string for the core group. This value should consist of only lowercase alphanumeric characters, hyphens and periods. Example: "", "apps", "build.openshift.io", etc.'
                        type: string
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      name:
                        description: name of the referent.
                        type: string
                      namespace:
                        description: namespace of the referent.
                        type: string
                      resource:
                        description: 'resource is the type that is being referenced. It is normally the plural form of the resource kind in lowercase. This value should consist of only lowercase alphanumeric characters and hyphens. Example: "deployments", "deploymentconfigs", "pods", etc.'
                        type: string
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                startTime:
                  description: startTime is the time when Insights data gathering started.
                  type: string
                  format: date-time
                  x-kubernetes-validations:
                    - rule: self == oldSelf
                      message: startTime is immutable once set
              x-kubernetes-validations:
                - rule: (!has(oldSelf.insightsRequestID) || has(self.insightsRequestID))
                  message: cannot remove insightsRequestID attribute from status
                - rule: (!has(oldSelf.startTime) || has(self.startTime))
                  message: cannot remove startTime attribute from status
                - rule: (!has(oldSelf.finishTime) || has(self.finishTime))
                  message: cannot remove finishTime attribute from status
                - rule: (!has(oldSelf.dataGatherState) || has(self.dataGatherState))
                  message: cannot remove dataGatherState attribute from status
      served: true
      storage: true
      subresources:
        status: {}
