// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/openshift/api/operatorcontrolplane/v1alpha1"
	operatorcontrolplanev1alpha1 "github.com/openshift/client-go/operatorcontrolplane/applyconfigurations/operatorcontrolplane/v1alpha1"
	typedoperatorcontrolplanev1alpha1 "github.com/openshift/client-go/operatorcontrolplane/clientset/versioned/typed/operatorcontrolplane/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakePodNetworkConnectivityChecks implements PodNetworkConnectivityCheckInterface
type fakePodNetworkConnectivityChecks struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.PodNetworkConnectivityCheck, *v1alpha1.PodNetworkConnectivityCheckList, *operatorcontrolplanev1alpha1.PodNetworkConnectivityCheckApplyConfiguration]
	Fake *FakeControlplaneV1alpha1
}

func newFakePodNetworkConnectivityChecks(fake *FakeControlplaneV1alpha1, namespace string) typedoperatorcontrolplanev1alpha1.PodNetworkConnectivityCheckInterface {
	return &fakePodNetworkConnectivityChecks{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.PodNetworkConnectivityCheck, *v1alpha1.PodNetworkConnectivityCheckList, *operatorcontrolplanev1alpha1.PodNetworkConnectivityCheckApplyConfiguration](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("podnetworkconnectivitychecks"),
			v1alpha1.SchemeGroupVersion.WithKind("PodNetworkConnectivityCheck"),
			func() *v1alpha1.PodNetworkConnectivityCheck { return &v1alpha1.PodNetworkConnectivityCheck{} },
			func() *v1alpha1.PodNetworkConnectivityCheckList { return &v1alpha1.PodNetworkConnectivityCheckList{} },
			func(dst, src *v1alpha1.PodNetworkConnectivityCheckList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.PodNetworkConnectivityCheckList) []*v1alpha1.PodNetworkConnectivityCheck {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.PodNetworkConnectivityCheckList, items []*v1alpha1.PodNetworkConnectivityCheck) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
