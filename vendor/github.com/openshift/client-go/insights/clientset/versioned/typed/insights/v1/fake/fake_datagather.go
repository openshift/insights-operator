// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/insights/v1"
	insightsv1 "github.com/openshift/client-go/insights/applyconfigurations/insights/v1"
	typedinsightsv1 "github.com/openshift/client-go/insights/clientset/versioned/typed/insights/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeDataGathers implements DataGatherInterface
type fakeDataGathers struct {
	*gentype.FakeClientWithListAndApply[*v1.DataGather, *v1.DataGatherList, *insightsv1.DataGatherApplyConfiguration]
	Fake *FakeInsightsV1
}

func newFakeDataGathers(fake *FakeInsightsV1) typedinsightsv1.DataGatherInterface {
	return &fakeDataGathers{
		gentype.NewFakeClientWithListAndApply[*v1.DataGather, *v1.DataGatherList, *insightsv1.DataGatherApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("datagathers"),
			v1.SchemeGroupVersion.WithKind("DataGather"),
			func() *v1.DataGather { return &v1.DataGather{} },
			func() *v1.DataGatherList { return &v1.DataGatherList{} },
			func(dst, src *v1.DataGatherList) { dst.ListMeta = src.ListMeta },
			func(list *v1.DataGatherList) []*v1.DataGather { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.DataGatherList, items []*v1.DataGather) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
