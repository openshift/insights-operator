// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	insightsv1 "github.com/openshift/api/insights/v1"
	applyconfigurationsinsightsv1 "github.com/openshift/client-go/insights/applyconfigurations/insights/v1"
	scheme "github.com/openshift/client-go/insights/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// DataGathersGetter has a method to return a DataGatherInterface.
// A group's client should implement this interface.
type DataGathersGetter interface {
	DataGathers() DataGatherInterface
}

// DataGatherInterface has methods to work with DataGather resources.
type DataGatherInterface interface {
	Create(ctx context.Context, dataGather *insightsv1.DataGather, opts metav1.CreateOptions) (*insightsv1.DataGather, error)
	Update(ctx context.Context, dataGather *insightsv1.DataGather, opts metav1.UpdateOptions) (*insightsv1.DataGather, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, dataGather *insightsv1.DataGather, opts metav1.UpdateOptions) (*insightsv1.DataGather, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*insightsv1.DataGather, error)
	List(ctx context.Context, opts metav1.ListOptions) (*insightsv1.DataGatherList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *insightsv1.DataGather, err error)
	Apply(ctx context.Context, dataGather *applyconfigurationsinsightsv1.DataGatherApplyConfiguration, opts metav1.ApplyOptions) (result *insightsv1.DataGather, err error)
	// Add a +genclient:noStatus comment above the type to avoid generating ApplyStatus().
	ApplyStatus(ctx context.Context, dataGather *applyconfigurationsinsightsv1.DataGatherApplyConfiguration, opts metav1.ApplyOptions) (result *insightsv1.DataGather, err error)
	DataGatherExpansion
}

// dataGathers implements DataGatherInterface
type dataGathers struct {
	*gentype.ClientWithListAndApply[*insightsv1.DataGather, *insightsv1.DataGatherList, *applyconfigurationsinsightsv1.DataGatherApplyConfiguration]
}

// newDataGathers returns a DataGathers
func newDataGathers(c *InsightsV1Client) *dataGathers {
	return &dataGathers{
		gentype.NewClientWithListAndApply[*insightsv1.DataGather, *insightsv1.DataGatherList, *applyconfigurationsinsightsv1.DataGatherApplyConfiguration](
			"datagathers",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *insightsv1.DataGather { return &insightsv1.DataGather{} },
			func() *insightsv1.DataGatherList { return &insightsv1.DataGatherList{} },
		),
	}
}
