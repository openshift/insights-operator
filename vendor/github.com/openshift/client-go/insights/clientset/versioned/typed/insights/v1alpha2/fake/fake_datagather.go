// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha2 "github.com/openshift/api/insights/v1alpha2"
	insightsv1alpha2 "github.com/openshift/client-go/insights/applyconfigurations/insights/v1alpha2"
	typedinsightsv1alpha2 "github.com/openshift/client-go/insights/clientset/versioned/typed/insights/v1alpha2"
	gentype "k8s.io/client-go/gentype"
)

// fakeDataGathers implements DataGatherInterface
type fakeDataGathers struct {
	*gentype.FakeClientWithListAndApply[*v1alpha2.DataGather, *v1alpha2.DataGatherList, *insightsv1alpha2.DataGatherApplyConfiguration]
	Fake *FakeInsightsV1alpha2
}

func newFakeDataGathers(fake *FakeInsightsV1alpha2) typedinsightsv1alpha2.DataGatherInterface {
	return &fakeDataGathers{
		gentype.NewFakeClientWithListAndApply[*v1alpha2.DataGather, *v1alpha2.DataGatherList, *insightsv1alpha2.DataGatherApplyConfiguration](
			fake.Fake,
			"",
			v1alpha2.SchemeGroupVersion.WithResource("datagathers"),
			v1alpha2.SchemeGroupVersion.WithKind("DataGather"),
			func() *v1alpha2.DataGather { return &v1alpha2.DataGather{} },
			func() *v1alpha2.DataGatherList { return &v1alpha2.DataGatherList{} },
			func(dst, src *v1alpha2.DataGatherList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha2.DataGatherList) []*v1alpha2.DataGather { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha2.DataGatherList, items []*v1alpha2.DataGather) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
